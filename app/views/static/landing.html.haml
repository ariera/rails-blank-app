.jumbotron
  .container
    %h1= t('hello')
    %p This is a template for a simple Rails app. It includes a set of tools that we tend to use in our projects. Use it as a starting point to create something more unique.
    %p
      = link_to 'https://github.com/ariera/rails-blank-app', class:'btn btn-primary btn-lg' do
        %i.fa.fa-github
        Fork it on Github

.container
  .row
    .col-md-4
      %h2
        %i.fa.fa-rebel
        Locales
      %p
        There are #{I18n.available_locales.length} different locales available
        %ol
          - I18n.available_locales.each do |locale|
            %li
              = link_to locale, url_for(request.query_parameters.merge("#{LocaleAware::LOCALE_PARAM}" => locale)), class:'btn btn-xs btn-default'
        with support for
        %ol
          %li params
          %li user preferences
          %li session
          %li and browser preferences
        Check
        %code LocaleAware
        concern to know more. It has been tested with the help of
        = link_to url_for(controller:"dev", action:"locales") do
          %code DevController
      %p
        %a.btn.btn-default{:href => url_for(controller:"dev", action:"locales"), :role => "button"} View details »
    .col-md-4
      %h2
        %i.fa.fa-paw
        BootstrapData
      %p
        BootstrapData is our solution for
        %strong sharing data from the backend with the fronted.
      %p
        We are gonna serialize the data in json format, render it in the html, and then provide a javascript function for easily accessing that data.
      %p
        = link_to url_for(controller:"dev", action:"bootstrap_data"), class:'btn btn-default' do
          View details »
    .col-md-4
      %h2
        %i.fa.fa-pied-piper-alt
        Some small features
      %ul
        %li
          = link_to url_for(controller:"dev", action:"access_denied"), class:'btn btn-xs btn-default' do
            Try it
          %code CanCan::AccessDenied
          errors redirect a user to the frontpage
        %li
          = link_to url_for(controller:"dev", action:"flash_messages"), class:'btn btn-xs btn-default' do
            Try it
          %code flash[:messages]
          are autmatically handeled by the layout
        %li
          = link_to page_path(:demo), class:'btn btn-xs btn-default' do
            Try it
          %code StaticController
          manages static pages, easily routable thanks to
          %code page_path(:name)
          helper
        %li
          = link_to url_for(controller:"dev", action:"mails"), class:'btn btn-xs btn-default' do
            Try it
          Mailing in this app is already in place

  %hr
  %footer
    %p © Company 2014
